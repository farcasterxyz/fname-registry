name: Build
description: Build application Docker image

inputs:
  dockerhub-user:
    description: Docker Hub user to pull any images as (for rate limiting and private image access)
    required: true
  dockerhub-password:
    description: Docker Hub password or personal access token for the specified Docker Hub user
    required: true
  image-tag:
    description: What to tag the image with (full image name)
    required: false
    default: build:${{ github.sha }}
  depot:
    description: Whether to enable builds via Depot.
    required: false
    default: "false"
  dockerfile:
    description: Path to the Dockerfile to build
    required: false
    default: ./Dockerfile
  context:
    description: Path to the directory to use for the build context
    required: false
    default: .
  push:
    description: Whether to push the built image
    required: false
    default: "false"
  platforms:
    description: Which platform to build the image for (make sure you select a runner that matches so this isn't virtualized, unless using Depot)
    required: false
    default: 'linux/arm64'

outputs:
  image-tag:
    description: Path to the image that was built
    value: ${{ steps.image-tag.outputs.image-tag }}

runs:
  using: composite

  steps:
    - name: Output Docker image tag
      id: image-tag
      env:
        IMAGE_TAG: ${{ inputs.image-tag }}
      run: echo "image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
      shell: bash

    - if: ${{ inputs.depot == 'true' }}
      uses: depot/use-action@v1

    - if: ${{ inputs.depot != 'true' }}
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub so we don't get rate limited
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.dockerhub-user }}
        password: ${{ inputs.dockerhub-password }}

    - uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        platforms: ${{ inputs.platforms }}
        tags: ${{ steps.image-tag.outputs.image-tag }}
        push: ${{ inputs.push }}
